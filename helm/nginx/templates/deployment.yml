apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: nginx
          {{- if and .Values.image .Values.image.repository }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          {{- else }}
          image: "nginx:latest"
          imagePullPolicy: "IfNotPresent"
          {{- end }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: html-volume
              mountPath: /usr/share/nginx/html
            - name: config-volume
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
      volumes:
        - name: html-volume
          {{- if and .Values.persistence (hasKey .Values.persistence "enabled") .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-html-content
            items:
              - key: index.html
                path: index.html

