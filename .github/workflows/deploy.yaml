name: Deploy to AWS EKS

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        id: terraform_apply
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Wait for EKS Cluster to Become Active
        if: steps.terraform_apply.outcome == 'success'
        run: |
          echo "Waiting for EKS cluster to become active..."
          aws eks wait cluster-active --name my-k8s-cluster --region ap-southeast-2

      - name: Save Terraform State
        if: steps.terraform_apply.outcome == 'success'
        run: |
          cd terraform
          tar -czf terraform-state.tar.gz terraform.tfstate

      - name: Upload Terraform State Artifact
        if: steps.terraform_apply.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: terraform/terraform-state.tar.gz

      - name: Update Kubeconfig
        if: steps.terraform_apply.outcome == 'success'
        run: |
          aws eks update-kubeconfig --region ap-southeast-2 --name my-k8s-cluster
          kubectl get nodes

      - name: Install Helm CLI
        if: steps.terraform_apply.outcome == 'success'
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Deploy AWS EBS CSI Driver
        run: |
          helm repo add aws-ebs-csi-driver https://kubernetes-sigs.github.io/aws-ebs-csi-driver
          helm repo update
          helm upgrade --install aws-ebs-csi-driver aws-ebs-csi-driver/aws-ebs-csi-driver \
            --namespace kube-system \
            --set controller.serviceAccount.create=true \
            --set controller.serviceAccount.name=ebs-csi-controller-sa \
            --set controller.serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=arn:aws:iam::843960079237:role/GHA-EBSCSIDRIVER

      - name: Verify EBS CSI Driver Deployment
        run: |
          kubectl get pods -n kube-system
          kubectl get svc -n kube-system

      - name: Deploy NGINX via Helm
        if: steps.terraform_apply.outcome == 'success'
        run: |
          helm upgrade --install nginx-release ./helm/nginx-chart \
            --namespace default \
            --create-namespace \
            -f ./helm/nginx-chart/values.yaml
          kubectl get ingress -n default

      - name: Make OIDC Trust Script Executable
        run: chmod +x scripts/update-oidc-trust.sh

      - name: Update IAM Role OIDC Trust Policy
        run: ./scripts/update-oidc-trust.sh
